{"ast":null,"code":"var _jsxFileName = \"/Users/richie/Desktop/ramp-fe-challenge 2/src/components/AppContextProvider/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { AppContext } from \"../../utils/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const cache = useRef(new Map());\n  const [error, setError] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      setError,\n      cache\n    },\n    children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampError\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"RampTextHeading--l\",\n        children: \"Oops. Application broken\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), \"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppContextProvider, \"RrsZHgxHYjlHTj5qTijpJKwl5hc=\");\n\n_c = AppContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["useRef","useState","AppContext","AppContextProvider","children","cache","Map","error","setError"],"sources":["/Users/richie/Desktop/ramp-fe-challenge 2/src/components/AppContextProvider/index.tsx"],"sourcesContent":["import { useRef, useState } from \"react\"\nimport { AppContext } from \"../../utils/context\"\nimport { AppContextProviderComponent } from \"./types\"\n\nexport const AppContextProvider: AppContextProviderComponent = ({ children }) => {\n  const cache = useRef(new Map<string, string>())\n  const [error, setError] = useState<string>(\"\")\n\n  return (\n    <AppContext.Provider value={{ setError, cache }}>\n      {error ? (\n        <div className=\"RampError\">\n          <h1 className=\"RampTextHeading--l\">Oops. Application broken</h1>\n          <div className=\"RampBreak--l\" />\n          Error: {error}\n        </div>\n      ) : (\n        children\n      )}\n    </AppContext.Provider>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAGA,OAAO,MAAMC,kBAA+C,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/E,MAAMC,KAAK,GAAGL,MAAM,CAAC,IAAIM,GAAJ,EAAD,CAApB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAS,EAAT,CAAlC;EAEA,oBACE,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAE;MAAEO,QAAF;MAAYH;IAAZ,CAA5B;IAAA,UACGE,KAAK,gBACJ;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAI,SAAS,EAAC,oBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAFF,aAGUA,KAHV;IAAA;MAAA;MAAA;MAAA;IAAA,QADI,GAOJH;EARJ;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAjBM;;GAAMD,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}